GET “/” body request ->
GET “/:id” body request ->
POST “/” body request ->
PUT “/:id” body request ->
DELETE “/:id” body request ->
{ "id": "typescript", "label": "TypeScript", "category": "programmingLanguages", "priority": 1 },
Id === label.toLowerCase()
• GET “/” – получние всех элементов массива
• GET “/:id” – получение отдельного элемента по id
• POST “/” – с клиента приходит объект вида {"label": "TypeScript", "category":
"programmingLanguages", "priority": 1 }. Добавить в массив объект в том случае, если
совпадений label.toLowerCase() с id массива нет. Вернуть клиенту массив и статус
• PUT “/:id” – обновить в массиве объект только в том случае, если есть совпадения с
id. Вернуть клиенту массив и статус
• DELETE “/:id” удалить из массива объект только в том случае, если id совпадает.
Вернуть клиенту массив и статус
[
{ "id": "javascript", "label": "JavaScript", "category": "programmingLanguages", "priority": 1 },
{ "id": "typescript", "label": "TypeScript", "category": "programmingLanguages", "priority": 1 },
{ "id": "sql", "label": "SQL", "category": "programmingLanguages", "priority": 2 },
{ "id": "java", "label": "Java", "category": "programmingLanguages", "priority": 3 },
{ "id": "go", "label": "GO", "category": "programmingLanguages", "priority": 3 },
{ "id": "firebasestorage", "label": "Firebase Storage", "category": "databases", "priority": 2 },
{ "id": "ibmcloudant", "label": "IBM Cloudant", "category": "databases", "priority": 2 },
{ "id": "react", "label": "React", "category": "webTechnologies", "priority": 1 },
{ "id": "angularjs", "label": "ANGULARJS", "category": "webTechnologies", "priority": 1 },
{ "id": "redux", "label": "Redux", "category": "webTechnologies", "priority": 1 },
{"id": "materialui","label": "Material UI","category": "webTechnologies","priority": 1 },
{"id": "git","label": "Git","category": "otherSkills","priority": 2 },
{"id": "adobephotoshop","label": "Adobe Photoshop","category": "otherSkills","priority": 2 },
]